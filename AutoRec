from hikka import loader, utils
from telethon.tl.types import Message
import re
import asyncio

@loader.tds
class SmartAutoReactsMod(loader.Module):
    """–£–º–Ω—ã–π –º–æ–¥—É–ª—å –∞–≤—Ç–æ—Ä–µ–∞–∫—Ü–∏–π —Å –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å—é –∏ –∫–∞–Ω–∞–ª–æ–º"""
    
    strings = {"name": "SmartAutoReacts"}
    
    def __init__(self):
        self.installed = False
        self.message_counters = {}  # –°—á–µ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —á–∞—Ç–∞–º
        
    async def client_ready(self, client, db):
        self._db = db
        self._client = client
        self.chats = self._db.get("SmartAutoReacts", "chats", {})
        self.settings = self._db.get("SmartAutoReacts", "settings", {
            "default_interval": 40,
            "show_channel_info": True
        })
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∫–∞–Ω–∞–ª–µ –ø—Ä–∏ –ø–µ—Ä–≤–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–µ
        if not self.installed and self.settings["show_channel_info"]:
            await asyncio.sleep(2)
            try:
                await self._client.send_message(
                    "me",
                    "üöÄ –ú–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n"
                    "üì¢ –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –º–æ–¥—É–ª–µ–π: @modulesTheHika\n"
                    "üë§ –°–æ–∑–¥–∞—Ç–µ–ª—å: @vipqlkxn\n\n"
                    "üîß –ö–æ–º–∞–Ω–¥—ã –º–æ–¥—É–ª—è:\n"
                    ".ar - –¥–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ—Ä–µ–∞–∫—Ü–∏—é\n"
                    ".arinterval - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª\n"
                    ".unar - —É–¥–∞–ª–∏—Ç—å –∞–≤—Ç–æ—Ä–µ–∞–∫—Ü–∏—é\n"
                    ".listar - —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤\n"
                    ".channel - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–Ω–∞–ª–µ"
                )
            except:
                pass
            self.installed = True
    
    async def arcmd(self, message: Message):
        """–î–æ–±–∞–≤–∏—Ç—å —á–∞—Ç: .ar <chat_id/—Å—Å—ã–ª–∫–∞> <emoji> [–∏–Ω—Ç–µ—Ä–≤–∞–ª]"""
        args = utils.get_args_raw(message).split()
        if len(args) < 2:
            return await message.edit("–§–æ—Ä–º–∞—Ç: .ar <chat/—Å—Å—ã–ª–∫–∞> <emoji> [–∏–Ω—Ç–µ—Ä–≤–∞–ª]")
        
        chat_identifier = args[0]
        emoji = args[1]
        interval = int(args[2]) if len(args) > 2 and args[2].isdigit() else self.settings["default_interval"]
        
        if re.match(r"^-?\d+$", chat_identifier):
            chat_id = chat_identifier
        else:
            if "t.me/" in chat_identifier:
                username = chat_identifier.split("t.me/")[1].split("/")[0]
                try:
                    chat = await self._client.get_entity(username)
                    chat_id = str(chat.id)
                except:
                    return await message.edit("‚ùå –ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
            else:
                return await message.edit("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Ç–∞
        self.chats[chat_id] = {
            "emoji": emoji,
            "interval": interval,
            "counter": 0
        }
        self._db.set("SmartAutoReacts", "chats", self.chats)
        
        response = (
            f"‚úÖ –ß–∞—Ç {chat_identifier} –¥–æ–±–∞–≤–ª–µ–Ω\n"
            f"üéØ –†–µ–∞–∫—Ü–∏—è: {emoji}\n"
            f"üìä –ò–Ω—Ç–µ—Ä–≤–∞–ª: –∫–∞–∂–¥—ã–µ {interval} —Å–æ–æ–±—â–µ–Ω–∏–π"
        )
        if self.settings["show_channel_info"]:
            response += f"\nüì¢ –ö–∞–Ω–∞–ª: @modulesTheHika"
            
        await message.edit(response)
        
    async def arintervalcmd(self, message: Message):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª: .arinterval <–∏–Ω—Ç–µ—Ä–≤–∞–ª>"""
        args = utils.get_args_raw(message)
        if not args.isdigit():
            return await message.edit("‚ùå –£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ")
        
        interval = int(args)
        self.settings["default_interval"] = interval
        self._db.set("SmartAutoReacts", "settings", self.settings)
        
        response = f"‚úÖ –ò–Ω—Ç–µ—Ä–≤–∞–ª –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {interval} —Å–æ–æ–±—â–µ–Ω–∏–π"
        if self.settings["show_channel_info"]:
            response += f"\nüì¢ –ö–∞–Ω–∞–ª: @modulesTheHika"
            
        await message.edit(response)
        
    async def unarcmd(self, message: Message):
        """–£–¥–∞–ª–∏—Ç—å —á–∞—Ç: .unar <chat_id/—Å—Å—ã–ª–∫–∞>"""
        chat_identifier = utils.get_args_raw(message)
        
        # –ü–æ–∏—Å–∫ –ø–æ ID
        if chat_identifier in self.chats:
            del self.chats[chat_identifier]
            self._db.set("SmartAutoReacts", "chats", self.chats)
            response = f"‚úÖ –ß–∞—Ç {chat_identifier} —É–¥–∞–ª–µ–Ω"
            if self.settings["show_channel_info"]:
                response += f"\nüì¢ –ö–∞–Ω–∞–ª: @modulesTheHika"
            return await message.edit(response)
        
        # –ü–æ–∏—Å–∫ –ø–æ —Å—Å—ã–ª–∫–µ
        if "t.me/" in chat_identifier:
            username = chat_identifier.split("t.me/")[1].split("/")[0]
            try:
                chat = await self._client.get_entity(username)
                chat_id = str(chat.id)
                if chat_id in self.chats:
                    del self.chats[chat_id]
                    self._db.set("SmartAutoReacts", "chats", self.chats)
                    response = f"‚úÖ –ß–∞—Ç {chat_identifier} —É–¥–∞–ª–µ–Ω"
                    if self.settings["show_channel_info"]:
                        response += f"\nüì¢ –ö–∞–Ω–∞–ª: @modulesTheHika"
                    return await message.edit(response)
            except:
                pass
        
        await message.edit("‚ùå –ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
    async def listarcmd(self, message: Message):
        """–°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤: .listar"""
        if not self.chats:
            response = "üì≠ –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –ø—É—Å—Ç"
            if self.settings["show_channel_info"]:
                response += f"\nüì¢ –ö–∞–Ω–∞–ª: @modulesTheHika"
            return await message.edit(response)
        
        result = "üìã –ß–∞—Ç—ã —Å –∞–≤—Ç–æ—Ä–µ–∞–∫—Ü–∏—è–º–∏:\n"
        for chat_id, settings in self.chats.items():
            result += f"‚Ä¢ {chat_id} - {settings['emoji']} (–∫–∞–∂–¥—ã–µ {settings['interval']} —Å–æ–æ–±—â–µ–Ω–∏–π)\n"
        
        if self.settings["show_channel_info"]:
            result += f"\nüì¢ –ö–∞–Ω–∞–ª –º–æ–¥—É–ª–µ–π: @modulesTheHika"
        await message.edit(result)
        
    async def watcher(self, message: Message):
        if not hasattr(message, "chat_id") or not message.chat_id:
            return
            
        chat_id = str(message.chat_id)
        if chat_id in self.chats:
            chat_settings = self.chats[chat_id]
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if "counter" not in chat_settings:
                chat_settings["counter"] = 0
                
            # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
            chat_settings["counter"] += 1
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–≥ –ª–∏ —Å—á–µ—Ç—á–∏–∫ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
            if chat_settings["counter"] >= chat_settings["interval"]:
                try:
                    await message.react(chat_settings["emoji"])
                    chat_settings["counter"] = 0  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏: {e}")
                
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            self.chats[chat_id] = chat_settings
            self._db.set("SmartAutoReacts", "chats", self.chats)

    async def channelcmd(self, message: Message):
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–Ω–∞–ª–µ: .channel"""
        await message.edit(
            "üì¢ –¢–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª –º–æ–¥—É–ª–µ–π: @modulesTheHika\n"
            "üë§ –°–æ–∑–¥–∞—Ç–µ–ª—å –º–æ–¥—É–ª—è: @vipqlkxn\n"
            "üöÄ –ü–æ–¥–ø–∏—à–∏—Å—å –¥–ª—è –Ω–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π!\n"
            f"‚öôÔ∏è –¢–µ–∫—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: {self.settings['default_interval']} —Å–æ–æ–±—â–µ–Ω–∏–π"
        )
        
    async def togglechannelcmd(self, message: Message):
        """–í–∫–ª/–≤—ã–∫–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∫–∞–Ω–∞–ª–µ: .togglechannel"""
        self.settings["show_channel_info"] = not self.settings["show_channel_info"]
        self._db.set("SmartAutoReacts", "settings", self.settings)
        
        status = "–≤–∫–ª—é—á–µ–Ω—ã" if self.settings["show_channel_info"] else "–≤—ã–∫–ª—é—á–µ–Ω—ã"
        await message.edit(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∫–∞–Ω–∞–ª–µ {status}")

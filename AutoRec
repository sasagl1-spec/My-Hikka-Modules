from hikka import loader, utils
from telethon.tl.types import Message
import re
import asyncio

@loader.tds
class ChannelAutoReactsMod(loader.Module):
    """–ú–æ–¥—É–ª—å –∞–≤—Ç–æ—Ä–µ–∞–∫—Ü–∏–π —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∫–∞–Ω–∞–ª–∞ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    
    strings = {"name": "ChannelAutoReacts"}
    
    def __init__(self):
        self.installed = False
        
    async def client_ready(self, client, db):
        self._db = db
        self._client = client
        self.chats = self._db.get("ChannelAutoReacts", "chats", {})
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∫–∞–Ω–∞–ª–µ –ø—Ä–∏ –ø–µ—Ä–≤–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–µ
        if not self.installed:
            await asyncio.sleep(2)
            try:
                await self._client.send_message(
                    "me",
                    "üöÄ –ú–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n"
                    "üì¢ –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –º–æ–¥—É–ª–µ–π: @modulesTheHika\n"
                    "üë§ –°–æ–∑–¥–∞—Ç–µ–ª—å: @vipqlkxn\n\n"
                    "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã:\n"
                    ".ar - –¥–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ—Ä–µ–∞–∫—Ü–∏—é\n"
                    ".unar - —É–¥–∞–ª–∏—Ç—å –∞–≤—Ç–æ—Ä–µ–∞–∫—Ü–∏—é\n"
                    ".listar - —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤"
                )
            except:
                pass
            self.installed = True
    
    async def arcmd(self, message: Message):
        """–î–æ–±–∞–≤–∏—Ç—å —á–∞—Ç: .ar <chat_id/—Å—Å—ã–ª–∫–∞> <emoji>"""
        args = utils.get_args_raw(message).split()
        if len(args) < 2:
            return await message.edit("–§–æ—Ä–º–∞—Ç: .ar <chat/—Å—Å—ã–ª–∫–∞> <emoji>")
        
        chat_identifier, emoji = args[0], args[1]
        
        if re.match(r"^-?\d+$", chat_identifier):
            chat_id = chat_identifier
        else:
            if "t.me/" in chat_identifier:
                username = chat_identifier.split("t.me/")[1].split("/")[0]
                try:
                    chat = await self._client.get_entity(username)
                    chat_id = str(chat.id)
                except:
                    return await message.edit("–ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
            else:
                return await message.edit("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")
        
        self.chats[chat_id] = emoji
        self._db.set("ChannelAutoReacts", "chats", self.chats)
        await message.edit(
            f"‚úÖ –ß–∞—Ç {chat_identifier} –¥–æ–±–∞–≤–ª–µ–Ω —Å —Ä–µ–∞–∫—Ü–∏–µ–π {emoji}\n"
            f"üì¢ –ö–∞–Ω–∞–ª –º–æ–¥—É–ª–µ–π: @modulesTheHika"
        )
        
    async def unarcmd(self, message: Message):
        """–£–¥–∞–ª–∏—Ç—å —á–∞—Ç: .unar <chat_id/—Å—Å—ã–ª–∫–∞>"""
        chat_identifier = utils.get_args_raw(message)
        
        if chat_identifier in self.chats:
            del self.chats[chat_identifier]
            self._db.set("ChannelAutoReacts", "chats", self.chats)
            return await message.edit(f"‚úÖ –ß–∞—Ç {chat_identifier} —É–¥–∞–ª–µ–Ω")
        
        if "t.me/" in chat_identifier:
            username = chat_identifier.split("t.me/")[1].split("/")[0]
            try:
                chat = await self._client.get_entity(username)
                chat_id = str(chat.id)
                if chat_id in self.chats:
                    del self.chats[chat_id]
                    self._db.set("ChannelAutoReacts", "chats", self.chats)
                    return await message.edit(f"‚úÖ –ß–∞—Ç {chat_identifier} —É–¥–∞–ª–µ–Ω")
            except:
                pass
        
        await message.edit("‚ùå –ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
    async def listarcmd(self, message: Message):
        """–°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤: .listar"""
        if not self.chats:
            return await message.edit(
                "üì≠ –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –ø—É—Å—Ç\n"
                "üì¢ –ö–∞–Ω–∞–ª –º–æ–¥—É–ª–µ–π: @modulesTheHika"
            )
        
        result = "üìã –ß–∞—Ç—ã —Å –∞–≤—Ç–æ—Ä–µ–∞–∫—Ü–∏—è–º–∏:\n"
        for chat_id, emoji in self.chats.items():
            result += f"‚Ä¢ {chat_id} - {emoji}\n"
        
        result += f"\nüì¢ –ö–∞–Ω–∞–ª –º–æ–¥—É–ª–µ–π: @modulesTheHika"
        await message.edit(result)
        
    async def watcher(self, message: Message):
        if not hasattr(message, "chat_id"):
            return
            
        chat_id = str(message.chat_id)
        if chat_id in self.chats:
            try:
                await message.react(self.chats[chat_id])
            except:
                pass

    async def channelcmd(self, message: Message):
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–Ω–∞–ª–µ: .channel"""
        await message.edit(
            "üì¢ –¢–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª –º–æ–¥—É–ª–µ–π: @modulesTheHika\n"
            "üë§ –°–æ–∑–¥–∞—Ç–µ–ª—å –º–æ–¥—É–ª—è: @vipqlkxn\n"
            "üöÄ –ü–æ–¥–ø–∏—à–∏—Å—å –¥–ª—è –Ω–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π!"
        )
